[versions]

# Config
compileSdk                  = "33"
nameSpace                   = "com.revakovskyi.eventifycommunity"
minSdk                      = "26"
targetSdk                   = "33"
versionCode                 = "1"
versionName                 = "1.0"

testInstrumentationRunner   = "androidx.test.runner.AndroidJUnitRunner"
kotlinCompilerExtension     = "1.4.3"
jvmTarget                   = "1.8"

# Plugins
ver_AndroidApplication      = "8.2.0-alpha06"
ver_KotlinAndroid           = "1.8.10"
ver_KotlinKsp               = "1.8.0-1.0.9"

# Android
ver_CoreKtx                 = "1.10.1"
ver_ActivityCompose         = "1.7.2"
ver_ComposeBom              = "2023.05.01"

# Compose
ver_Coil                    = "2.4.0"
ver_NavigationCompose       = "2.5.3"

# Tests
ver_JUnit                   = "4.13.2"
ver_AndroidxTestExtJUnit    = "1.1.5"
ver_EspressoCore            = "3.5.1"

# Lifecycle
ver_LifecycleRuntimeKtx     = "2.6.1"
ver_LifecycleViewmodel      = "2.6.1"

# Kotlinx
var_CoroutinesAndroid       = "1.6.4"

# Dagger2
ver_Dagger2                 = "2.46.1"

# Room
ver_Room                    = "2.5.1"

# Networking
ver_OkHttpBom               = "4.11.0"
ver_Retrofit2               = "2.9.0"
ver_Gson                    = "2.10.1"

# SwipeRefresh
ver_SwipeRefreshLayout      = "1.1.0"

# --------------------------------------------------------------------------------------------------


[plugins]

androidApplication  = { id = "com.android.application", version.ref = "ver_AndroidApplication" }
kotlinAndroid       = { id = "org.jetbrains.kotlin.android", version.ref = "ver_KotlinAndroid" }
kotlinKsp           = { id = "com.google.devtools.ksp", version.ref = "ver_KotlinKsp" }

# --------------------------------------------------------------------------------------------------


[libraries]

# Android
core-ktx                    = { group = "androidx.core", name = "core-ktx", version.ref = "ver_CoreKtx" }
activity-compose            = { group = "androidx.activity", name = "activity-compose", version.ref = "ver_ActivityCompose" }
compose-bom                 = { group = "androidx.compose", name = "compose-bom", version.ref = "ver_ComposeBom" }

# UI
ui                          = { group = "androidx.compose.ui", name = "ui" }
ui-graphics                 = { group = "androidx.compose.ui", name = "ui-graphics" }
material3                   = { group = "androidx.compose.material3", name = "material3" }
ui-tooling-preview          = { group = "androidx.compose.ui", name = "ui-tooling-preview" }

# Compose
coilCompose                 = { group = "io.coil-kt", name = "coil-compose", version.ref = "ver_Coil" }
navigationCompose           = { group = "androidx.navigation", name = "navigation-compose", version.ref = "ver_NavigationCompose" }

# Tests
junit                       = { group = "junit", name = "junit", version.ref = "ver_JUnit" }
androidx-test-ext-junit     = { group = "androidx.test.ext", name = "junit", version.ref = "ver_AndroidxTestExtJUnit" }
espresso-core               = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "ver_EspressoCore" }
ui-tooling                  = { group = "androidx.compose.ui", name = "ui-tooling" }
ui-test-manifest            = { group = "androidx.compose.ui", name = "ui-test-manifest" }
ui-test-junit4              = { group = "androidx.compose.ui", name = "ui-test-junit4" }

# Lifecycle
lifecycle-runtime-ktx       = { group = "androidx.lifecycle", name = "lifecycle-runtime-ktx", version.ref = "ver_LifecycleRuntimeKtx" }
lifecycle-viewModel-compose = { group = "androidx.lifecycle", name = "lifecycle-viewmodel-compose", version.ref = "ver_LifecycleViewmodel" }

# Kotlinx
coroutines                  = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "var_CoroutinesAndroid" }

# Dagger2
dagger2                     = { module = "com.google.dagger:dagger-android", version.ref = "ver_Dagger2" }
dagger2-support             = { module = "com.google.dagger:dagger-android-support", version.ref = "ver_Dagger2" }
dagger2-processor           = { module = "com.google.dagger:dagger-android-processor", version.ref = "ver_Dagger2" }
dagger2-compiler            = { module = "com.google.dagger:dagger-compiler", version.ref = "ver_Dagger2" }

# Room
roomRuntime                 = { module = "androidx.room:room-runtime", version.ref = "ver_Room" }
roomKtx                     = { module = "androidx.room:room-ktx", version.ref = "ver_Room" }
roomCompiler                = { module = "androidx.room:room-compiler", version.ref = "ver_Room" }

# Networking
okHttpBom                   = { module = "com.squareup.okhttp3:okhttp-bom", version.ref = "ver_OkHttpBom" }
okHttp                      = { module = "com.squareup.okhttp3:okhttp" }
okHttpLoggingInterceptor    = { module = "com.squareup.okhttp3:logging-interceptor" }
retrofit2                   = { module = "com.squareup.retrofit2:retrofit", version.ref = "ver_Retrofit2" }
retrofitConverterGson       = { module = "com.squareup.retrofit2:converter-gson", version.ref = "ver_Retrofit2" }
gson                        = { module = "com.google.code.gson:gson", version.ref = "ver_Gson" }

# SwipeRefresh
swipeRefreshLayout          = { module = "androidx.swiperefreshlayout:swiperefreshlayout", version.ref = "ver_SwipeRefreshLayout" }

# --------------------------------------------------------------------------------------------------


[bundles]

composeUi = [
    "ui",
    "ui-graphics",
    "material3",
    "ui-tooling-preview"
]

lifecycle = [
    "lifecycle-runtime-ktx",
    "lifecycle-viewModel-compose"
]

dagger2 = [
    "dagger2",
    "dagger2-support"
]

okHttp = [
    "okHttpBom",
    "okHttp",
    "okHttpLoggingInterceptor"
]

retrofit2 = [
    "retrofit2",
    "retrofitConverterGson",
    "gson"
]

room = [
    "roomRuntime",
    "roomKtx"
]